name: Build Sample
on: [push, pull_request]

jobs:
    build-win:
        name: Build for Windows
        runs-on: windows-latest
        strategy:
          fail-fast: false
          matrix:
              arch: [x64, ARM64]
              target: [Windows]

        steps:
          - uses: actions/checkout@v4
            with:
                submodules: true
          - name: Configure
            run: | 
                mkdir build && cd build
                cmake -DCMAKE_SYSTEM_NAME=${{ matrix.target }} -DCMAKE_SYSTEM_VERSION="10.0" -A${{ matrix.arch }} ..
          - name: Build
            run: cmake --build build --target sdl-template --config Release
          - name: Upload Build
            uses: actions/upload-artifact@v4
            with: 
                name: sdl-template-${{ matrix.target }}-${{ matrix.arch }}
                path: |
                    build/Release/*.exe
                    build/Release/*.dll

    build-mac:
        name: Build for Apple
        runs-on: macos-14
        strategy:
          fail-fast: false
          matrix:
              target: ['Darwin']

        steps:
          - uses: actions/checkout@v4
            with:
                submodules: true
          - name: Setup Xcode version
            uses: maxim-lobanov/setup-xcode@v1.6.0
            with:
                xcode-version: "15.3"
          - name: Configure
            run: | 
                mkdir -p build 
                mkdir -p build/mac
                cd build/mac
                cmake -G "Xcode" -DCMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED=NO -DCMAKE_SYSTEM_NAME=${{ matrix.target }} -DSDL_STATIC=ON -DSDL_SHARED=OFF -S ../..
          - name: Build
            run: |
              cd build/mac
              cmake --build ./ --target install --config Release
          - name: Create DMG
            run: |
                cd build/mac
                cpack -G DragNDrop -C Release
          - name: Upload Build
            uses: actions/upload-artifact@v4
            with: 
                name: sdl-template-apple-${{ matrix.target }}
                path: |
                  ./build/mac/*.dmg
    build-ubuntu-deb:
      name: Build for Ubuntu (DEB Package)
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
            target: ['Linux']

      steps:
        - uses: actions/checkout@v4
          with:
              submodules: true
        - name: Setup CMake
          uses: jwlawson/actions-setup-cmake@v1.9
        - name: Setup Ninja
          uses: ashutoshvarma/setup-ninja@v2
        - name: Build DEB Package
          run: |
              mkdir build && cd build
              cmake -DCMAKE_SYSTEM_NAME=${{ matrix.target }} -DCMAKE_SYSTEM_VERSION="10.0" ..
              cmake --build . --target sdl-template --config Release
              cpack -G DEB
        - name: Upload DEB Package
          uses: actions/upload-artifact@v4
          with: 
              name: sdl-template-ubuntu-package
              path: build/*.deb

    build-fedora-rpm:
      name: Build for Fedora (RPM Package)
      runs-on: fedora-latest
      strategy:
        fail-fast: false
        matrix:
            target: ['Linux']

      steps:
        - uses: actions/checkout@v4
          with:
              submodules: true
        - name: Setup CMake
          uses: jwlawson/actions-setup-cmake@v1.9
        - name: Setup Ninja
          uses: ashutoshvarma/setup-ninja@v2
        - name: Build RPM Package
          run: |
              mkdir build && cd build
              cmake -DCMAKE_SYSTEM_NAME=${{ matrix.target }} -DCMAKE_SYSTEM_VERSION="10.0" ..
              cmake --build . --target sdl-template --config Release
              cpack -G RPM
        - name: Upload RPM Package
          uses: actions/upload-artifact@v4
          with: 
              name: sdl-template-fedora-package
              path: build/*.rpm
